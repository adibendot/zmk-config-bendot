#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        Num_1 {
            bindings = <&kp N1>;
            key-positions = <16 4>;
        };

        Num_2 {
            bindings = <&kp N2>;
            key-positions = <7 19>;
        };

        Num_3 {
            bindings = <&kp N3>;
            key-positions = <3 15>;
        };

        Num_4 {
            bindings = <&kp N4>;
            key-positions = <8 20>;
        };

        Num_5 {
            bindings = <&kp NUMBER_5>;
            key-positions = <2 14>;
        };

        Num_6 {
            bindings = <&kp N6>;
            key-positions = <9 21>;
        };

        Num_7 {
            bindings = <&kp NUMBER_7>;
            key-positions = <1 13>;
        };

        Num_8 {
            bindings = <&kp NUMBER_8>;
            key-positions = <10 22>;
        };

        Num_9 {
            bindings = <&kp NUMBER_9>;
            key-positions = <5 17>;
        };

        Num_0 {
            bindings = <&kp N0>;
            key-positions = <6 18>;
        };

        fun_1 {
            bindings = <&kp F1>;
            key-positions = <16 28>;
        };

        fun_2 {
            bindings = <&kp F2>;
            key-positions = <19 31>;
        };

        fun_3 {
            bindings = <&kp F3>;
            key-positions = <15 27>;
        };

        fun_4 {
            bindings = <&kp F4>;
            key-positions = <20 32>;
        };

        fun_5 {
            bindings = <&kp F5>;
            key-positions = <14 26>;
        };

        fun_6 {
            bindings = <&kp F6>;
            key-positions = <21 33>;
        };

        fun_7 {
            bindings = <&kp F7>;
            key-positions = <13 25>;
        };

        fun_8 {
            bindings = <&kp F8>;
            key-positions = <22 34>;
        };

        fun_9 {
            bindings = <&kp F9>;
            key-positions = <17 29>;
        };

        fun_10 {
            bindings = <&kp F10>;
            key-positions = <18 30>;
        };

        fun_11 {
            bindings = <&kp F11>;
            key-positions = <12 24>;
        };

        fun_12 {
            bindings = <&kp F12>;
            key-positions = <23 35>;
        };

        combo_lbrck {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <0 12>;
        };

        combo_rbrckt {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <11 23>;
        };

        combo_return {
            bindings = <&kp RETURN>;
            key-positions = <38 39>;
        };

        combo_lgui {
            bindings = <&kp LEFT_CONTROL>;
            key-positions = <24 25>;
        };

        combo_rgui {
            bindings = <&kp RCTRL>;
            key-positions = <34 35>;
        };

        combo_esc {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };

        combo_copy {
            bindings = <&kp LG(C)>;
            key-positions = <2 3 4>;
        };

        combo_cut {
            bindings = <&kp LG(X)>;
            key-positions = <2 3>;
        };

        combo_paste {
            bindings = <&kp LG(V)>;
            key-positions = <2 4>;
        };

        combo_caps {
            bindings = <&kp CAPSLOCK>;
            key-positions = <24 35>;
        };

        combo_bt {
            bindings = <&mo 3>;
            key-positions = <0 11>;
        };
    };

    behaviors {
        mod_tog: mod_tog {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TOG";
            bindings = <&kp>, <&tog>;

            #binding-cells = <2>;
            tapping-term-ms = <175>;
            quick-tap-ms = <150>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&kp TAB               &kp APOS  &kp COMMA  &kp DOT          &kp P                   &kp Y          &kp F        &kp G                 &kp C            &kp R  &kp L  &kp SLASH
&kp EQUAL             &kp A     &kp O      &kp E            &kp U                   &kp I          &kp D        &kp H                 &kp T            &kp N  &kp S  &kp MINUS
&mt LEFT_SHIFT GRAVE  &kp SEMI  &kp Q      &kp J            &kp K                   &kp X          &kp B        &kp M                 &kp W            &kp V  &kp Z  &mt RIGHT_SHIFT BACKSLASH
                                           &mod_tog LALT 1  &mt LEFT_GUI BACKSPACE  &lt 1 SPACE    &lt 2 SPACE  &mt RIGHT_GUI DELETE  &mod_tog RALT 2
            >;
        };

        Nav-Num {
            bindings = <
&trans  &kp PRINTSCREEN  &kp HOME  &kp UP_ARROW  &kp PAGE_UP    &trans    &kp ASTERISK  &kp N7  &kp N8   &kp N9  &kp FSLH   &trans
&trans  &kp DELETE       &kp LEFT  &kp DOWN      &kp RIGHT      &trans    &kp PLUS      &kp N4  &kp N5   &kp N6  &kp MINUS  &trans
&trans  &kp INS          &kp END   &kp K_APP     &kp PAGE_DOWN  &trans    &kp ESC       &kp N1  &kp N2   &kp N3  &kp EQUAL  &trans
                                   &trans        &trans         &trans    &kp RET       &kp N0  &kp DOT
            >;

            label = "^|#";
        };

        Num-Nav {
            bindings = <
&trans  &kp ASTERISK  &kp N7  &kp N8   &kp N9  &kp FSLH     &trans  &kp PAGE_UP    &kp UP_ARROW  &kp HOME   &kp PRINTSCREEN  &trans
&trans  &kp PLUS      &kp N4  &kp N5   &kp N6  &kp MINUS    &trans  &kp LEFT       &kp DOWN      &kp RIGHT  &kp DELETE       &trans
&trans  &kp ESC       &kp N1  &kp N2   &kp N3  &kp EQUAL    &trans  &kp PAGE_DOWN  &kp K_APP     &kp END    &kp INS          &trans
                              &kp DOT  &kp N0  &kp RET      &trans  &trans         &trans
            >;

            label = "#|^";
        };

        Bluetooth {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_CLR  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans        &trans          &trans      &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans        &trans          &trans      &trans  &trans  &trans  &trans  &trans
                                    &trans        &trans        &trans          &trans      &trans  &trans
            >;

            label = "BT";
        };
    };
};
